= Acts As Encryptable

Encrypt and decrypt your data with ease.


== Installation

Run this if the gem isn't installed already
  sudo gem install ssoper-acts_as_encryptable --source=http://gems.github.com

Or place in your environment.rb
  config.gem 'ssoper-acts_as_encryptable', :source => 'http://gems.github.com'


== Configuration

After installing be sure to add a column to any tables that need to be encrypted
  class AddEncryptionFieldsToCreditCards < ActiveRecord::Migration
    def self.up
      add_column :credit_cards, :encrypted, :text
    end

    def self.down
      remove_column :credit_cards, :encrypted
    end
  end

Or you can use the migration helper to generate the migration for the model
  ./script/generate acts_as_encryptable_migration credit_cards

And in your model
  class CreditCard < ActiveRecord::Base
    acts_as_encryptable :first_name, :last_name, :number
    attr_accessor :first_name, :last_name, :number
  end


== Usage

Encrypt your data
  card = CreditCard.new
  card.first_name = 'Test'
  card.last_name = 'User'
  card.number = '1234567890'
  card.save
  
Decrypt your data
  card = CreditCard.last
  card.decrypt!
  => { :first_name => 'Test', :last_name => 'User', :number => '1234567890' }


== Tests

Run 'rake test'


== Acknowledgements

* Tobias LÃ¼tke for his blog post on asymmetric encryption using Ruby's native SSL libraries
* Paul Barry for helping me to simplify the functionality
